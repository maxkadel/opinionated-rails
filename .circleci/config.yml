version: 2.1
orbs:
  ruby: circleci/ruby@1.4.0
  node: circleci/node@5.0.0
jobs:
  build:
    docker:
      - image: cimg/ruby:3.0.3-node
    steps:
      - checkout
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: yarn
  checking:
    docker:
      - image: cimg/ruby:3.0.3-node
    steps:
      - checkout
      - ruby/install-deps
      - ruby/rubocop-check:
          format: progress
          label: Inspecting with Rubocop
  test:
    docker:
      - image: cimg/ruby:3.0.3-node
      - environment:
          POSTGRES_DB: opinionated_rails_test
          POSTGRES_PASSWORD: ''
          POSTGRES_USER: circleci-demo-ruby
        image: cimg/postgres:14.1
    environment:
      BUNDLE_JOBS: '3'
      BUNDLE_RETRY: '3'
      # CC_TEST_REPORTER_ID: 133a22aca6afbaed41750c2b71abb7f384f3c54fdbd74322cdbd417277b24933
      PGHOST: 127.0.0.1
      PGPASSWORD: ''
      PGUSER: circleci-demo-ruby
      RAILS_ENV: test
    parallelism: 3
    steps:
      - checkout
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: yarn
      - run:
          command: 'dockerize -wait tcp://localhost:5432 -timeout 1m'
          name: Wait for DB
      - run:
          command: 'bundle exec rails db:schema:load --trace'
          name: Database setup
      - run:
          command: yarn build
          name: Build javascript assets
      - run:
          command: yarn build:css
          name: Build css assets
      - run:
          name: Install Code Climate Test Reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Run tests
          command: |
            mkdir -p test-results/rspec test-artifacts
            ./cc-test-reporter before-build
            TESTFILES=$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
            bundle exec rspec --profile 10 \
                              --color \
                              --order random \
                              --format RspecJunitFormatter \
                              --out test-results/rspec/rspec.xml \
                              --format progress \
                              -- ${TESTFILES}
      - run:
          name: Send coverage report to Code Climate
          command: |
            ./cc-test-reporter format-coverage -t simplecov -o "coverage/codeclimate.$CIRCLE_NODE_INDEX.json"
      - persist_to_workspace:
          root: coverage
          paths:
            - codeclimate.*.json
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-artifacts
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build:
    jobs:
      - build
      - checking
      - test:
          requires:
            - build
